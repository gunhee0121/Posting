{"version":3,"sources":["Components/PostItem.js","Components/PostList.js","Components/PostInput.js","Components/Toast.js","Components/PostContainer.js","App.js","reportWebVitals.js","index.js"],"names":["PostItem","props","delete","bind","e","this","onDelete","post","id","title","contents","onClick","Component","PostList","width","postList","map","PostInput","state","controlledHandler","submit","target","name","setState","value","onSubmit","className","type","placeholder","onChange","rows","Toast","children","PostContainer","isToast","toastMessage","timerId","firstDate","Date","setDate","secondDate","getTime","slice","push","clearTimeout","setTimeout","deleteItem","find","splice","indexOf","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb4df1b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\n\r\nclass PostItem extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.delete=this.delete.bind(this);\r\n    }\r\n\r\n    delete(e){\r\n        this.props.onDelete(this.props.post.id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td>{this.props.post.id}</td>\r\n                <td>{this.props.post.title}</td>\r\n                <td>{this.props.post.contents}</td>\r\n                <td><button onClick={this.delete}>삭제</button></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PostItem;","import PostItem from './PostItem.js';\r\nimport React from 'react';\r\n\r\nfunction PostList(props){\r\n    return(\r\n        <table>\r\n            <colgroup>\r\n                <col width=\"20%\"/><col/><col width=\"30%\"/><col width=\"10%\"/>\r\n            </colgroup>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th><th>Title</th><th>Contents</th><th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.postList.map((post)=><PostItem key={post.id} post={post}\r\n                    onDelete={props.onDelete}/> )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default PostList;","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nclass PostInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            contents: ''\r\n        }\r\n\r\n        this.controlledHandler = this.controlledHandler.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    controlledHandler(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: target.value\r\n        });\r\n    }\r\n\r\n    submit(e) {\r\n        this.props.onSubmit(this.state.title, this.state.contents);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"title-area\">\r\n                    <label>제목</label>\r\n                    <div>\r\n                        <input type=\"text\" name=\"title\" value={this.state.title}\r\n                            placeholder=\"제목을 입력해 주세요.\" onChange={this.controlledHandler} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"contents-area\">\r\n                    <label>내용</label>\r\n                    <div>\r\n                        <textarea name=\"contents\" rows=\"10\" value={this.state.contents}\r\n                            onChange={this.controlledHandler} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-area\">\r\n                    <button onClick={this.submit}>등록</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PostInput;","import React from 'react';\r\n\r\nfunction Toast(props){\r\n    return(\r\n        <div className=\"toast\">{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport PostList from './PostList.js';\r\nimport PostInput from './PostInput.js';\r\nimport Toast from './Toast.js';\r\n\r\nclass PostContainer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            postList:[],\r\n            isToast:false,\r\n            toastMessage:'',\r\n            timerId:0\r\n        };\r\n\r\n        this.submit=this.submit.bind(this);\r\n        this.delete=this.delete.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        const firstDate = new Date(new Date().setDate(-2));\r\n        const secondDate = new Date(new Date().setDate(-1));\r\n\r\n        this.setState({\r\n            postList:[{\r\n                id:firstDate.getTime(),\r\n                title:'첫 번째 포스트 제목',\r\n                contents:'첫 번째 포스트 내용'\r\n            },{\r\n                id:secondDate.getTime(),\r\n                title:'두 번째 포스트 제목',\r\n                contents:'두 번째 포스트 내용'\r\n            }]\r\n        })\r\n    }\r\n\r\n    submit(title,contents){\r\n        const now=new Date();\r\n        const post={\r\n            id:now.getTime(),\r\n            title:title,\r\n            contents:contents,\r\n        };\r\n\r\n        const postList = this.state.postList.slice();\r\n        postList.push(post);\r\n\r\n        clearTimeout(this.state.timerId);\r\n        const timerId = setTimeout(()=>{\r\n            this.setState({\r\n                isToast:false,\r\n                toastMessage:''\r\n            });\r\n        },2000);\r\n\r\n        this.setState({\r\n            postList:postList,\r\n            isToast:true,\r\n            toastMessage:'포스트가 등록되었습니다.',\r\n            timerId:timerId\r\n        });\r\n\r\n    }\r\n\r\n    delete(id){\r\n        const postList = this.state.postList.slice();\r\n        const deleteItem = postList.find((post)=>{\r\n            return post.id === id;\r\n        });\r\n\r\n        clearTimeout(this.state.timerId);\r\n        const timerId = setTimeout(()=>{\r\n            this.setState({\r\n                isToast:false,\r\n                toastMessage:''\r\n            });\r\n        },2000);\r\n\r\n        postList.splice(postList.indexOf(deleteItem),1);\r\n        this.setState({\r\n            postList:postList,\r\n            isToast:true,\r\n            toastMessage:'포스트가 삭제되었습니다.',\r\n            timerId:timerId\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2 class=\"title\">Posting</h2>\r\n                <PostList postList={this.state.postList} onDelete={this.delete}/>\r\n                {this.state.isToast?\r\n                <Toast>\r\n                    <span>{this.state.toastMessage}</span>\r\n                </Toast>:null}\r\n                <hr/>\r\n                <PostInput onSubmit={this.submit}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PostContainer;","import React from 'react';\nimport './App.css';\nimport PostContainer from './Components/PostContainer.js';\n\nfunction App() {\n  return (\n    <div className=\"posting\">\n        <PostContainer></PostContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}